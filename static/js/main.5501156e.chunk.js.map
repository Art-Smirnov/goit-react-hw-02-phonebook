{"version":3,"sources":["Components/ContactForm/ContactForm.js","Components/ContactList/ContactListItem/ContactListItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/Container/Container.js","App.js","index.js"],"names":["ContactForm","state","name","number","onInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","this","onChange","type","pattern","title","required","Component","ContactListItem","contacts","onDelete","map","id","onClick","ContactList","Filter","Container","children","App","initialContacts","filter","addContact","normalizedName","toLocaleLowerCase","contact","uuidv4","some","alert","deleteContact","contactId","changeFilter","getVisibleContacts","normalizedFilter","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5501156e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ContactForm.scss';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  onInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"ContactForm\" onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            className=\"ContactForm__input\"\r\n            onChange={this.onInputChange}\r\n            value={this.state.name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            className=\"ContactForm__input\"\r\n            onChange={this.onInputChange}\r\n            value={this.state.number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className=\"submit__btn\" onChange={this.onSubmit} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ContactListItem.scss';\n\nconst ContactListItem = ({ contacts, onDelete }) =>\n  contacts.map(({ id, name, number }) => (\n    <li className=\"ContactListItem\" key={id}>\n      <span className=\"ContactListItem__data\">\n        {name}: {number}\n      </span>\n\n      <button\n        className=\"delete__btn\"\n        onClick={() => onDelete(id)}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  ));\n\nContactListItem.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string.isRequired))\n    .isRequired,\n};\n\nexport default ContactListItem;\n","import React from 'react';\n\nimport ContactListItem from './ContactListItem';\nimport './ContactList.scss';\n\nconst ContactList = ({ contacts, onDelete }) => (\n  <ul className=\"ContactList\">\n    {<ContactListItem contacts={contacts} onDelete={onDelete} />}\n  </ul>\n);\n\nexport default ContactList;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Filter.scss';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Find your contacts by name\r\n    <input\r\n      className=\"Filter__input\"\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Container.scss';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React, { Component } from 'react';\r\n\r\nimport initialContacts from './data/contacts.json';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from './Components/ContactForm';\r\nimport ContactList from './Components/ContactList';\r\nimport Filter from './Components/Filter';\r\nimport Container from './Components/Container';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: initialContacts,\r\n    filter: '',\r\n  };\r\n\r\n  addContact = ({ name, number }) => {\r\n    const { contacts } = this.state;\r\n    const normalizedName = name.toLocaleLowerCase();\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    contacts.some(\r\n      contact => contact.name.toLocaleLowerCase() === normalizedName,\r\n    )\r\n      ? alert(`${name} is already in contacts`)\r\n      : this.setState(({ contacts }) => ({\r\n          contacts: [contact, ...contacts],\r\n        }));\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter(({ id }) => id !== contactId),\r\n    }));\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLocaleLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLocaleLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <Container>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChange={this.changeFilter} />\r\n        <ContactList contacts={visibleContacts} onDelete={this.deleteContact} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}